<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Project.Ecommerce</name>
    </assembly>
    <members>
        <member name="M:Project.Ecommerce.Controllers.V1.BancosController.Incluir(Project.Ecommerce.Domain.Entities.Banco)">
             <summary>
             Incluir Banco
             </summary>
             <remarks>
             # Alterar Banco
             
             Incluir um Banco na base de dados.
             
             # Sample request:
            
                 POST /Banco
                 {
                     "Nome": "teste nome"        
                 }
             </remarks> 
             <param name="obj">Banco</param>        
             <response code="200">Banco incluido com sucesso</response>
             <response code="400">Banco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.BancosController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Banco
            </summary>
            <remarks>
            # Consultar Banco
            
            Consulta um Banco na base de dados.
            </remarks>
            <param name="id">Id do Banco</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Banco</response>
            <response code="400">Banco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.BancosController.Listar(System.Boolean)">
            <summary>
            Listar Bancos
            </summary>
            <remarks>
            # Listar Bancos
            
            Lista Bancos da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Bancos</response>
            <response code="400">Bancos não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.BancosController.Alterar(Project.Ecommerce.Domain.Entities.Banco)">
             <summary>
             Alterar Banco
             </summary>
             <remarks>
             # Alterar Banco
             
             Altera um Banco na base de dados.
             
             # Sample request:
            
                 PUT /Banco
                 {
                     "id": 1,
                     "Nome": "teste nome"        
                 }
             </remarks> 
             <param name="obj">Banco</param>        
             <response code="200">Banco alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.BancosController.Remover(System.Int32)">
            <summary>
            Remover Banco
            </summary>
            <remarks>
            # Remover Banco
            
            Remove um Banco da base de dados.
            </remarks>
            <param name="id">Id do Banco</param>        
            <response code="200">Banco removido com sucesso</response>
            <response code="400">Banco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CaracteristicasController.Incluir(Project.Ecommerce.Domain.Entities.Caracteristica)">
             <summary>
             Incluir Caracteristica
             </summary>
             <remarks>
             # Incluir Caracteristica
             
             Incluir uma Caracteristica na base de dados.
             
             # Sample request:
            
                 POST /Caracteristica
                 {
                     "IdProduto": 1,    
                     "Nome": "Teste nome",    
                     "Descricao": "Teste descrição",    
                     "Ordem": 1
                 }
             </remarks> 
             <param name="obj">Caracteristica</param>        
             <response code="200">Caracteristica incluida com sucesso</response>
             <response code="400">Caracteristica não encontrada</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CaracteristicasController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Caracteristica
            </summary>
            <remarks>
            # Consultar Caracteristica
            
            Consulta uma Caracteristica na base de dados.
            </remarks>
            <param name="id">Id da Caracteristica</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma Caracteristica</response>
            <response code="400">Caracteristica não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CaracteristicasController.Listar(System.Boolean)">
            <summary>
            Listar Caracteristicas
            </summary>
            <remarks>
            # Listar Caracteristicas
            
            Lista Caracteristicas da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Caracteristicas</response>
            <response code="400">Caracteristicas não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CaracteristicasController.ListarPorIdProduto(System.Int32,System.Boolean)">
            <summary>
            Listar Caracteristicas por IdProduto
            </summary>
            <remarks>
            # Listar Caracteristicas por IdProduto
            
            Lista Caracteristicas por IdProduto na base de dados.
            </remarks>
            <param name="idProduto">Listar por Id Produto</param> 
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Caracteristicas</response>
            <response code="400">Caracteristicas não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CaracteristicasController.Alterar(Project.Ecommerce.Domain.Entities.Caracteristica)">
             <summary>
             Alterar Caracteristica
             </summary>
             <remarks>
             # Alterar Caracteristica
             
             Altera uma Caracteristica na base de dados.
             
             # Sample request:
            
                 PUT /Caracteristica
                 {
                     "id": 1,
                     "IdProduto": 1,    
                     "Nome": "Teste nome",    
                     "Descricao": "Teste descrição",    
                     "Ordem": 1
                 }
             </remarks> 
             <param name="obj">Caracteristica</param>        
             <response code="200">Caracteristica alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CaracteristicasController.Remover(System.Int32)">
            <summary>
            Remover Caracteristica
            </summary>
            <remarks>
            # Remover Caracteristica
            
            Remove uma Caracteristica da base de dados.
            </remarks>
            <param name="id">Id da Caracteristica</param>        
            <response code="200">Caracteristica removido com sucesso</response>
            <response code="400">Caracteristica não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CarrinhosController.Incluir(Project.Ecommerce.Domain.Entities.Carrinho)">
             <summary>
             Incluir Carrinho
             </summary>
             <remarks>
             # Alterar Carrinho
             
             Incluir um Carrinho na base de dados.
             
             # Sample request:
            
                 POST /Carrinho
                 {
                     "IdUsuario": 1,       
                     "IdProduto": 1,      
                     "Quantidade": 2        
                 }
             </remarks> 
             <param name="obj">Carrinho</param>        
             <response code="200">Carrinho incluido com sucesso</response>
             <response code="400">Carrinho não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CarrinhosController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Carrinho
            </summary>
            <remarks>
            # Consultar Carrinho
            
            Consulta um Carrinho na base de dados.
            </remarks>
            <param name="id">Id do Carrinho</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Carrinho</response>
            <response code="400">Carrinho não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CarrinhosController.Listar(System.Boolean)">
            <summary>
            Listar Carrinhos
            </summary>
            <remarks>
            # Listar Carrinhos
            
            Lista Carrinhos da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Carrinhos</response>
            <response code="400">Carrinhos não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CarrinhosController.Alterar(Project.Ecommerce.Domain.Entities.Carrinho)">
             <summary>
             Alterar Carrinho
             </summary>
             <remarks>
             # Alterar Carrinho
             
             Altera um Carrinho na base de dados.
             
             # Sample request:
            
                 PUT /Carrinho
                 {
                     "id": 1,
                     "IdUsuario": 1,       
                     "IdProduto": 1,      
                     "Quantidade": 2      
                 }
             </remarks> 
             <param name="obj">Carrinho</param>        
             <response code="200">Carrinho alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CarrinhosController.Remover(System.Int32)">
            <summary>
            Remover Carrinho
            </summary>
            <remarks>
            # Remover Carrinho
            
            Remove um Carrinho da base de dados.
            </remarks>
            <param name="id">Id do Carrinho</param>        
            <response code="200">Carrinho removido com sucesso</response>
            <response code="400">Carrinho não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CategoriasController.Incluir(Project.Ecommerce.Domain.Entities.Categoria)">
             <summary>
             Incluir Categoria
             </summary>
             <remarks>
             # Incluir Categoria
             
             Incluir uma Categoria na base de dados.
             
             # Sample request:
            
                 POST /Categoria
                 {
                     "Nome": "Teste nome"
                 }
             </remarks> 
             <param name="obj">Categoria</param>        
             <response code="200">Categoria incluida com sucesso</response>
             <response code="400">Categoria não encontrada</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CategoriasController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Categoria
            </summary>
            <remarks>
            # Consultar Categoria
            
            Consulta uma Categoria na base de dados.
            </remarks>
            <param name="id">Id da Categoria</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma Categoria</response>
            <response code="400">Categoria não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CategoriasController.Listar(System.Boolean)">
            <summary>
            Listar Categorias
            </summary>
            <remarks>
            # Listar Categorias
            
            Lista Categorias da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Categorias</response>
            <response code="400">Categorias não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CategoriasController.Alterar(Project.Ecommerce.Domain.Entities.Categoria)">
             <summary>
             Alterar Categoria
             </summary>
             <remarks>
             # Alterar Categoria
             
             Altera uma Categoria na base de dados.
             
             # Sample request:
            
                 PUT /Categoria
                 {
                     "id": 1,
                     "Nome": "Teste nome"
                 }
             </remarks> 
             <param name="obj">Categoria</param>        
             <response code="200">Categoria alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.CategoriasController.Remover(System.Int32)">
            <summary>
            Remover Categoria
            </summary>
            <remarks>
            # Remover Categoria
            
            Remove uma Categoria da base de dados.
            </remarks>
            <param name="id">Id da Categoria</param>        
            <response code="200">Categoria removido com sucesso</response>
            <response code="400">Categoria não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ComentariosController.Incluir(Project.Ecommerce.Domain.Entities.Comentario)">
             <summary>
             Incluir Comentario
             </summary>
             <remarks>
             # Alterar Comentario
             
             Incluir um Comentario na base de dados.
             
             # Sample request:
            
                 POST /Comentario
                 {
                     "IdProduto" : 1,
                     "Titulo" : "teste titulo",
                     "Texto" : "teste texto",
                     "Nota": 1
                 }
             </remarks> 
             <param name="obj">Comentario</param>        
             <response code="200">Comentario incluido com sucesso</response>
             <response code="400">Comentario não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ComentariosController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Comentario
            </summary>
            <remarks>
            # Consultar Comentario
            
            Consulta um Comentario na base de dados.
            </remarks>
            <param name="id">Id do Comentario</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Comentario</response>
            <response code="400">Comentario não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ComentariosController.Listar(System.Boolean)">
            <summary>
            Listar Comentarios
            </summary>
            <remarks>
            # Listar Comentarios
            
            Lista Comentarios da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Comentarios</response>
            <response code="400">Comentarios não encontradas</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ComentariosController.ListarPorIdProduto(System.Int32,System.Boolean)">
            <summary>
            Listar Comentarios por IdProduto
            </summary>
            <remarks>
            # Listar Comentarios por IdProduto
            
            Lista Comentarios por IdProduto na base de dados.
            </remarks>
            <param name="idProduto">Listar por IdProduto</param> 
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Comentarios</response>
            <response code="400">Comentarios não encontradas</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ComentariosController.Alterar(Project.Ecommerce.Domain.Entities.Comentario)">
             <summary>
             Alterar Comentario
             </summary>
             <remarks>
             # Alterar Comentario
             
             Altera um Comentario na base de dados.
             
             # Sample request:
            
                 PUT /Comentario
                 {
                     "id": 1,
                     "IdProduto" : 1,
                     "Titulo" : "teste titulo",
                     "Texto" : "teste texto",
                     "Nota": 1  
                 }
             </remarks> 
             <param name="obj">Comentario</param>        
             <response code="200">Comentario alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ComentariosController.Remover(System.Int32)">
            <summary>
            Remover Comentario
            </summary>
            <remarks>
            # Remover Comentario
            
            Remove um Comentario da base de dados.
            </remarks>
            <param name="id">Id do Comentario</param>        
            <response code="200">Comentario removido com sucesso</response>
            <response code="400">Comentario não encontrada</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.EnderecosController.Incluir(Project.Ecommerce.Domain.Entities.Endereco)">
             <summary>
             Incluir Endereco
             </summary>
             <remarks>
             # Alterar Endereco
             
             Incluir um Endereco na base de dados.
             
             # Sample request:
            
                 POST /Endereco
                 {
                     "IdUsuario": 1,    
                     "NomeEndereco": "teste nome",    
                     "Numero": "123",    
                     "Complemento": "teste Complemento",    
                     "Cep": "teste Cep",    
                     "Cidade": "teste Cidade",    
                     "Bairro": "teste Bairro",    
                     "Estado": "teste Estado",    
                     "Referencia": "teste Referencia"    
                 }
             </remarks> 
             <param name="obj">Endereco</param>        
             <response code="200">Endereco incluido com sucesso</response>
             <response code="400">Endereco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.EnderecosController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Endereco
            </summary>
            <remarks>
            # Consultar Endereco
            
            Consulta um Endereco na base de dados.
            </remarks>
            <param name="id">Id do Endereco</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Endereco</response>
            <response code="400">Endereco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.EnderecosController.Consultar(System.String)">
            <summary>
            Consultar Endereco por CEP
            </summary>
            <remarks>
            # Consultar Endereco por CEP
            
            Consulta um Endereco por CEP.
            </remarks>
            <param name="cep">Informar o CEP</param> 
            <response code="200">Retorna um Endereco</response>
            <response code="400">Endereco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.EnderecosController.Listar(System.Boolean)">
            <summary>
            Listar Enderecos
            </summary>
            <remarks>
            # Listar Enderecos
            
            Lista Enderecos da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Enderecos</response>
            <response code="400">Enderecos não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.EnderecosController.Alterar(Project.Ecommerce.Domain.Entities.Endereco)">
             <summary>
             Alterar Endereco
             </summary>
             <remarks>
             # Alterar Endereco
             
             Altera um Endereco na base de dados.
             
             # Sample request:
            
                 PUT /Endereco
                 {
                     "id": 1,
                     "NomeEndereco": "teste nome",    
                     "Numero": "123",    
                     "Complemento": "teste Complemento",    
                     "Cep": "teste Cep",    
                     "Cidade": "teste Cidade",    
                     "Bairro": "teste Bairro",    
                     "Estado": "teste Estado",    
                     "Referencia": "teste Referencia"    
                 }
             </remarks> 
             <param name="obj">Endereco</param>        
             <response code="200">Endereco alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.EnderecosController.Remover(System.Int32)">
            <summary>
            Remover Endereco
            </summary>
            <remarks>
            # Remover Endereco
            
            Remove um Endereco da base de dados.
            </remarks>
            <param name="id">Id do Endereco</param>        
            <response code="200">Endereco removido com sucesso</response>
            <response code="400">Endereco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.FotosController.Incluir(Project.Ecommerce.Domain.Entities.Foto)">
             <summary>
             Incluir Foto
             </summary>
             <remarks>
             # Alterar Foto
             
             Incluir uma Foto na base de dados.
             
             # Sample request:
            
                 POST /Foto
                 {
                     "IdCategoria" : 1,
                     "IdProduto" : 1,
                     "Nome": "teste nome",
                     "Base64": ""
                 }
             </remarks> 
             <param name="obj">Foto</param>        
             <response code="200">Foto incluida com sucesso</response>
             <response code="400">Foto não encontrada</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.FotosController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Foto
            </summary>
            <remarks>
            # Consultar Foto
            
            Consulta uma Foto na base de dados.
            </remarks>
            <param name="id">Id da Foto</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma Foto</response>
            <response code="400">Foto não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.FotosController.Listar(System.Boolean)">
            <summary>
            Listar Fotos
            </summary>
            <remarks>
            # Listar Fotos
            
            Lista Fotos da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Fotos</response>
            <response code="400">Fotos não encontradas</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.FotosController.Alterar(Project.Ecommerce.Domain.Entities.Foto)">
             <summary>
             Alterar Foto
             </summary>
             <remarks>
             # Alterar Foto
             
             Altera uma Foto na base de dados.
             
             # Sample request:
            
                 PUT /Foto
                 {
                     "id": 1,
                     "IdCategoria" : 1,
                     "IdProduto" : 1,
                     "Nome": "teste nome",
                     "Base64": ""     
                 }
             </remarks> 
             <param name="obj">Foto</param>        
             <response code="200">Foto alterada com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.FotosController.Remover(System.Int32)">
            <summary>
            Remover Foto
            </summary>
            <remarks>
            # Remover Foto
            
            Remove uma Foto da base de dados.
            </remarks>
            <param name="id">Id da Foto</param>        
            <response code="200">Foto removido com sucesso</response>
            <response code="400">Foto não encontrada</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ProdutosController.Incluir(Project.Ecommerce.Domain.Entities.Produto)">
             <summary>
             Incluir Produto
             </summary>
             <remarks>
             # Incluir Produto
             
             Incluir um Produto na base de dados.
             
             # Sample request:
            
                 POST /Produto
                 {
                     "IdCategoria": 1,    
                     "IdVariacao": 1,    
                     "Nome": "teste",    
                     "Descricao": "teste Complemento",    
                     "Quantidade": 2,    
                     "Valor": 0.0   
                 }
             </remarks> 
             <param name="obj">Produto</param>        
             <response code="200">Produto incluido com sucesso</response>
             <response code="400">Produto não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ProdutosController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Produto
            </summary>
            <remarks>
            # Consultar Produto
            
            Consulta um Produto na base de dados.
            </remarks>
            <param name="id">Id do Produto</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Produto</response>
            <response code="400">Produto não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ProdutosController.Listar(System.Boolean)">
            <summary>
            Listar Produtos
            </summary>
            <remarks>
            # Listar Produtos
            
            Lista Produtos da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Produtos</response>
            <response code="400">Produtos não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ProdutosController.ListarPorCategoriaEVariacao(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Listar Produtos por IdCategoria e IdVariacao
            </summary>
            <remarks>
            # Listar Produtos por IdCategoria e IdVariacao
            
            Lista Produtos por IdCategoria e IdVariacao na base de dados.
            </remarks>
            <param name="idCategoria">Listar por IdCategoria</param> 
            <param name="idVariacao">Listar por IdVariação</param> 
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Comentarios</response>
            <response code="400">Comentarios não encontradas</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ProdutosController.Alterar(Project.Ecommerce.Domain.Entities.Produto)">
             <summary>
             Alterar Produto
             </summary>
             <remarks>
             # Alterar Produto
             
             Altera um Produto na base de dados.
             
             # Sample request:
            
                 PUT /Produto
                 {
                     "id": 1,
                     "IdCategoria": 1,    
                     "IdVariacao": 1,    
                     "Nome": "teste",    
                     "Descricao": "teste Complemento",    
                     "Quantidade": 2,    
                     "Valor": 0.0   
                 }
             </remarks> 
             <param name="obj">Produto</param>        
             <response code="200">Produto alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ProdutosController.Remover(System.Int32)">
            <summary>
            Remover Produto
            </summary>
            <remarks>
            # Remover Produto
            
            Remove um Produto da base de dados.
            </remarks>
            <param name="id">Id do Produto</param>        
            <response code="200">Produto removido com sucesso</response>
            <response code="400">Produto não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.StatusController.Incluir(Project.Ecommerce.Domain.Entities.Status)">
             <summary>
             Incluir Status
             </summary>
             <remarks>
             # Incluir Status
             
             Incluir um Status na base de dados.
             
             # Sample request:
            
                 POST /Status
                 {
                     "Nome": "teste nome",       
                     "Descricao": "teste descricao"    
                 }
             </remarks> 
             <param name="obj">Status</param>        
             <response code="200">Status incluido com sucesso</response>
             <response code="400">Status não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.StatusController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Status
            </summary>
            <remarks>
            # Consultar Status
            
            Consulta um Status na base de dados.
            </remarks>
            <param name="id">Id do Status</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Status</response>
            <response code="400">Status não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.StatusController.Listar(System.Boolean)">
            <summary>
            Listar Status
            </summary>
            <remarks>
            # Listar Status
            
            Lista Status da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Status</response>
            <response code="400">Status não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.StatusController.Alterar(Project.Ecommerce.Domain.Entities.Status)">
             <summary>
             Alterar Status
             </summary>
             <remarks>
             # Alterar Status
             
             Altera um Status na base de dados.
             
             # Sample request:
            
                 PUT /Status
                 {
                     "id": 1,
                     "Nome": "teste nome",  
                     "Descricao": "teste descricao"   
                 }
             </remarks> 
             <param name="obj">Status</param>        
             <response code="200">Status alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.StatusController.Remover(System.Int32)">
            <summary>
            Remover Status
            </summary>
            <remarks>
            # Remover Status
            
            Remove um Status da base de dados.
            </remarks>
            <param name="id">Id do Status</param>        
            <response code="200">Status removido com sucesso</response>
            <response code="400">Status não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.UsuariosController.Incluir(Project.Ecommerce.Domain.Entities.Usuario)">
             <summary>
             Incluir Usuario
             </summary>
             <remarks>
             # Alterar Usuario
             
             Incluir um Usuario na base de dados.
             
             # Sample request:
            
                 POST /Usuario
                 {
                     "Nome": "teste nome",    
                     "Perfil": "AD",    
                     "Email": "teste e-mail",    
                     "Senha": "teste senha"    
                 }
             </remarks> 
             <param name="obj">Usuario</param>        
             <response code="200">Usuario incluido com sucesso</response>
             <response code="400">Usuario não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.UsuariosController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Usuario
            </summary>
            <remarks>
            # Consultar Usuario
            
            Consulta um Usuario na base de dados.
            </remarks>
            <param name="id">Id do Usuario</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Usuario</response>
            <response code="400">Usuario não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.UsuariosController.Listar(System.Boolean)">
            <summary>
            Listar Usuarios
            </summary>
            <remarks>
            # Listar Usuarios
            
            Lista Usuarios da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Usuarios</response>
            <response code="400">Usuarios não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.UsuariosController.Alterar(Project.Ecommerce.Domain.Entities.Usuario)">
             <summary>
             Alterar Usuario
             </summary>
             <remarks>
             # Alterar Usuario
             
             Altera um Usuario na base de dados.
             
             # Sample request:
            
                 PUT /Usuario
                 {
                     "id": 1,
                     "Nome": "teste nome",
                     "Perfil": "AD",  
                     "Email": "teste e-mail",    
                     "Senha": "teste senha"  
                 }
             </remarks> 
             <param name="obj">Usuario</param>        
             <response code="200">Usuario alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.UsuariosController.Remover(System.Int32)">
            <summary>
            Remover Usuario
            </summary>
            <remarks>
            # Remover Usuario
            
            Remove um Usuario da base de dados.
            </remarks>
            <param name="id">Id do Usuario</param>        
            <response code="200">Usuario removido com sucesso</response>
            <response code="400">Usuario não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.VariacoesController.Incluir(Project.Ecommerce.Domain.Entities.Variacao)">
             <summary>
             Incluir Variacao
             </summary>
             <remarks>
             # Incluir Variacao
             
             Incluir uma Variacao na base de dados.
             
             # Sample request:
            
                 POST /Variacao
                 {
                     "IdCategoria": 1,    
                     "IdVariacao": 1,    
                     "Nome": "teste",    
                     "Descricao": "teste Complemento",    
                     "Quantidade": 2,    
                     "Valor": 0.0   
                 }
             </remarks> 
             <param name="obj">Variacao</param>        
             <response code="200">Variacao incluida com sucesso</response>
             <response code="400">Variacao não encontrada</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.VariacoesController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Variacao
            </summary>
            <remarks>
            # Consultar Variacao
            
            Consulta uma Variacao na base de dados.
            </remarks>
            <param name="id">Id da Variacao</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma Variacao</response>
            <response code="400">Variacao não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.VariacoesController.Listar(System.Boolean)">
            <summary>
            Listar Variacoes
            </summary>
            <remarks>
            # Listar Variacoes
            
            Lista Variacoes da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Variacoes</response>
            <response code="400">Variacoes não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.VariacoesController.Alterar(Project.Ecommerce.Domain.Entities.Variacao)">
             <summary>
             Alterar Variacao
             </summary>
             <remarks>
             # Alterar Variacao
             
             Altera uma Variacao na base de dados.
             
             # Sample request:
            
                 PUT /Variacao
                 {
                     "id": 1,
                     "IdCategoria": 1,    
                     "IdVariacao": 1,    
                     "Nome": "teste",    
                     "Descricao": "teste Complemento",    
                     "Quantidade": 2,    
                     "Valor": 0.0   
                 }
             </remarks> 
             <param name="obj">Variacao</param>        
             <response code="200">Variacao alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.VariacoesController.Remover(System.Int32)">
            <summary>
            Remover Variacao
            </summary>
            <remarks>
            # Remover Variacao
            
            Remove uma Variacao da base de dados.
            </remarks>
            <param name="id">Id da Variacao</param>        
            <response code="200">Variacao removido com sucesso</response>
            <response code="400">Variacao não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.VendasController.Incluir(Project.Ecommerce.Domain.Entities.Venda)">
             <summary>
             Incluir Venda
             </summary>
             <remarks>
             # Incluir Venda
             
             Incluir uma Venda na base de dados.
             
             # Sample request:
            
                 POST /Venda
                 {
                     "IdUsuario": 1,    
                     "IdProduto": 1,    
                     "IdEndereco": 1,    
                     "TipoPagamento": "teste",    
                     "Valor": 1,    
                     "Quantidade": 1
                 }
             </remarks> 
             <param name="obj">Venda</param>        
             <response code="200">Venda incluida com sucesso</response>
             <response code="400">Venda não encontrada</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.VendasController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Venda
            </summary>
            <remarks>
            # Consultar Venda
            
            Consulta uma Venda na base de dados.
            </remarks>
            <param name="id">Id da Venda</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma Venda</response>
            <response code="400">Venda não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.VendasController.Listar(System.Boolean)">
            <summary>
            Listar Vendas
            </summary>
            <remarks>
            # Listar Vendas
            
            Lista Vendas da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Vendas</response>
            <response code="400">Vendas não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.VendasController.Alterar(Project.Ecommerce.Domain.Entities.Venda)">
             <summary>
             Alterar Venda
             </summary>
             <remarks>
             # Alterar Venda
             
             Altera uma Venda na base de dados.
             
             # Sample request:
            
                 PUT /Venda
                 {
                     "id": 1,
                     "IdUsuario": 1,    
                     "IdProduto": 1,    
                     "IdEndereco": 1,    
                     "TipoPagamento": "teste",    
                     "Valor": 1,    
                     "Quantidade": 1
                 }
             </remarks> 
             <param name="obj">Venda</param>        
             <response code="200">Venda alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.VendasController.Remover(System.Int32)">
            <summary>
            Remover Venda
            </summary>
            <remarks>
            # Remover Venda
            
            Remove uma Venda da base de dados.
            </remarks>
            <param name="id">Id da Venda</param>        
            <response code="200">Venda removido com sucesso</response>
            <response code="400">Venda não encontrado</response>
        </member>
    </members>
</doc>
