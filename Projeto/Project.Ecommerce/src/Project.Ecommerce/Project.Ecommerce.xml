<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Project.Ecommerce</name>
    </assembly>
    <members>
        <member name="M:Project.Ecommerce.Controllers.V1.BancosController.Incluir(Project.Ecommerce.Domain.Entities.Banco)">
             <summary>
             Incluir Banco
             </summary>
             <remarks>
             # Alterar Banco
             
             Incluir um Banco na base de dados.
             
             # Sample request:
            
                 POST /Banco
                 {
                     "Nome": "teste nome"        
                 }
             </remarks> 
             <param name="obj">Banco</param>        
             <response code="200">Banco incluido com sucesso</response>
             <response code="400">Banco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.BancosController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Banco
            </summary>
            <remarks>
            # Consultar Banco
            
            Consulta um Banco na base de dados.
            </remarks>
            <param name="id">Id do Banco</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Banco</response>
            <response code="400">Banco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.BancosController.Listar(System.Boolean)">
            <summary>
            Listar Bancos
            </summary>
            <remarks>
            # Listar Bancos
            
            Lista Bancos da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Bancos</response>
            <response code="400">Bancos não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.BancosController.Alterar(Project.Ecommerce.Domain.Entities.Banco)">
             <summary>
             Alterar Banco
             </summary>
             <remarks>
             # Alterar Banco
             
             Altera um Banco na base de dados.
             
             # Sample request:
            
                 PUT /Banco
                 {
                     "id": 1,
                     "Nome": "teste nome"        
                 }
             </remarks> 
             <param name="obj">Banco</param>        
             <response code="200">Banco alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.BancosController.Remover(System.Int32)">
            <summary>
            Remover Banco
            </summary>
            <remarks>
            # Remover Banco
            
            Remove um Banco da base de dados.
            </remarks>
            <param name="id">Id do Banco</param>        
            <response code="200">Banco removido com sucesso</response>
            <response code="400">Banco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.EnderecosController.Incluir(Project.Ecommerce.Domain.Entities.Endereco)">
             <summary>
             Incluir Endereco
             </summary>
             <remarks>
             # Alterar Endereco
             
             Incluir um Endereco na base de dados.
             
             # Sample request:
            
                 POST /Endereco
                 {
                     "IdUsuario": 1,    
                     "NomeEndereco": "teste nome",    
                     "Numero": "123",    
                     "Complemento": "teste Complemento",    
                     "Cep": "teste Cep",    
                     "Cidade": "teste Cidade",    
                     "Bairro": "teste Bairro",    
                     "Estado": "teste Estado",    
                     "Referencia": "teste Referencia"    
                 }
             </remarks> 
             <param name="obj">Endereco</param>        
             <response code="200">Endereco incluido com sucesso</response>
             <response code="400">Endereco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.EnderecosController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Endereco
            </summary>
            <remarks>
            # Consultar Endereco
            
            Consulta um Endereco na base de dados.
            </remarks>
            <param name="id">Id do Endereco</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Endereco</response>
            <response code="400">Endereco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.EnderecosController.Listar(System.Boolean)">
            <summary>
            Listar Enderecos
            </summary>
            <remarks>
            # Listar Enderecos
            
            Lista Enderecos da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Enderecos</response>
            <response code="400">Enderecos não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.EnderecosController.Alterar(Project.Ecommerce.Domain.Entities.Endereco)">
             <summary>
             Alterar Endereco
             </summary>
             <remarks>
             # Alterar Endereco
             
             Altera um Endereco na base de dados.
             
             # Sample request:
            
                 PUT /Endereco
                 {
                     "id": 1,
                     "NomeEndereco": "teste nome",    
                     "Numero": "123",    
                     "Complemento": "teste Complemento",    
                     "Cep": "teste Cep",    
                     "Cidade": "teste Cidade",    
                     "Bairro": "teste Bairro",    
                     "Estado": "teste Estado",    
                     "Referencia": "teste Referencia"    
                 }
             </remarks> 
             <param name="obj">Endereco</param>        
             <response code="200">Endereco alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.EnderecosController.Remover(System.Int32)">
            <summary>
            Remover Endereco
            </summary>
            <remarks>
            # Remover Endereco
            
            Remove um Endereco da base de dados.
            </remarks>
            <param name="id">Id do Endereco</param>        
            <response code="200">Endereco removido com sucesso</response>
            <response code="400">Endereco não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ProdutosController.Incluir(Project.Ecommerce.Domain.Entities.Produto)">
             <summary>
             Incluir Produto
             </summary>
             <remarks>
             # Alterar Produto
             
             Incluir um Produto na base de dados.
             
             # Sample request:
            
                 POST /Produto
                 {
                     "IdCategoria": 1,    
                     "IdVariacao": 1,    
                     "Nome": "teste",    
                     "Descricao": "teste Complemento",    
                     "Quantidade": 2,    
                     "Valor": 0.0   
                 }
             </remarks> 
             <param name="obj">Produto</param>        
             <response code="200">Produto incluido com sucesso</response>
             <response code="400">Produto não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ProdutosController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Produto
            </summary>
            <remarks>
            # Consultar Produto
            
            Consulta um Produto na base de dados.
            </remarks>
            <param name="id">Id do Produto</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Produto</response>
            <response code="400">Produto não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ProdutosController.Listar(System.Boolean)">
            <summary>
            Listar Produtos
            </summary>
            <remarks>
            # Listar Produtos
            
            Lista Produtos da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Produtos</response>
            <response code="400">Produtos não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ProdutosController.Alterar(Project.Ecommerce.Domain.Entities.Produto)">
             <summary>
             Alterar Produto
             </summary>
             <remarks>
             # Alterar Produto
             
             Altera um Produto na base de dados.
             
             # Sample request:
            
                 PUT /Produto
                 {
                     "id": 1,
                     "IdCategoria": 1,    
                     "IdVariacao": 1,    
                     "Nome": "teste",    
                     "Descricao": "teste Complemento",    
                     "Quantidade": 2,    
                     "Valor": 0.0   
                 }
             </remarks> 
             <param name="obj">Produto</param>        
             <response code="200">Produto alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.ProdutosController.Remover(System.Int32)">
            <summary>
            Remover Produto
            </summary>
            <remarks>
            # Remover Produto
            
            Remove um Produto da base de dados.
            </remarks>
            <param name="id">Id do Produto</param>        
            <response code="200">Produto removido com sucesso</response>
            <response code="400">Produto não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.StatusController.Incluir(Project.Ecommerce.Domain.Entities.Status)">
             <summary>
             Incluir Status
             </summary>
             <remarks>
             # Incluir Status
             
             Incluir um Status na base de dados.
             
             # Sample request:
            
                 POST /Status
                 {
                     "Nome": "teste nome",       
                     "Descricao": "teste descricao"    
                 }
             </remarks> 
             <param name="obj">Status</param>        
             <response code="200">Status incluido com sucesso</response>
             <response code="400">Status não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.StatusController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Status
            </summary>
            <remarks>
            # Consultar Status
            
            Consulta um Status na base de dados.
            </remarks>
            <param name="id">Id do Status</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Status</response>
            <response code="400">Status não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.StatusController.Listar(System.Boolean)">
            <summary>
            Listar Statuss
            </summary>
            <remarks>
            # Listar Statuss
            
            Lista Statuss da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Statuss</response>
            <response code="400">Statuss não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.StatusController.Alterar(Project.Ecommerce.Domain.Entities.Status)">
             <summary>
             Alterar Status
             </summary>
             <remarks>
             # Alterar Status
             
             Altera um Status na base de dados.
             
             # Sample request:
            
                 PUT /Status
                 {
                     "id": 1,
                     "Nome": "teste nome",  
                     "Descricao": "teste descricao"   
                 }
             </remarks> 
             <param name="obj">Status</param>        
             <response code="200">Status alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.StatusController.Remover(System.Int32)">
            <summary>
            Remover Status
            </summary>
            <remarks>
            # Remover Status
            
            Remove um Status da base de dados.
            </remarks>
            <param name="id">Id do Status</param>        
            <response code="200">Status removido com sucesso</response>
            <response code="400">Status não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.UsuariosController.Incluir(Project.Ecommerce.Domain.Entities.Usuario)">
             <summary>
             Incluir Usuario
             </summary>
             <remarks>
             # Alterar Usuario
             
             Incluir um Usuario na base de dados.
             
             # Sample request:
            
                 POST /Usuario
                 {
                     "Nome": "teste nome",    
                     "Perfil": "AD",    
                     "Email": "teste e-mail",    
                     "Senha": "teste senha"    
                 }
             </remarks> 
             <param name="obj">Usuario</param>        
             <response code="200">Usuario incluido com sucesso</response>
             <response code="400">Usuario não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.UsuariosController.Consultar(System.Int32,System.Boolean)">
            <summary>
            Consultar Usuario
            </summary>
            <remarks>
            # Consultar Usuario
            
            Consulta um Usuario na base de dados.
            </remarks>
            <param name="id">Id do Usuario</param>     
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna um Usuario</response>
            <response code="400">Usuario não encontrado</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.UsuariosController.Listar(System.Boolean)">
            <summary>
            Listar Usuarios
            </summary>
            <remarks>
            # Listar Usuarios
            
            Lista Usuarios da base de dados.
            </remarks>
            <param name="getDependencies">Listar dependências do objeto</param> 
            <response code="200">Retorna uma lista de Usuarios</response>
            <response code="400">Usuarios não encontrados</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.UsuariosController.Alterar(Project.Ecommerce.Domain.Entities.Usuario)">
             <summary>
             Alterar Usuario
             </summary>
             <remarks>
             # Alterar Usuario
             
             Altera um Usuario na base de dados.
             
             # Sample request:
            
                 PUT /Usuario
                 {
                     "id": 1,
                     "Nome": "teste nome",
                     "Perfil": "AD",  
                     "Email": "teste e-mail",    
                     "Senha": "teste senha"  
                 }
             </remarks> 
             <param name="obj">Usuario</param>        
             <response code="200">Usuario alterado com sucesso</response>
             <response code="400">ID informado não é válido</response>
        </member>
        <member name="M:Project.Ecommerce.Controllers.V1.UsuariosController.Remover(System.Int32)">
            <summary>
            Remover Usuario
            </summary>
            <remarks>
            # Remover Usuario
            
            Remove um Usuario da base de dados.
            </remarks>
            <param name="id">Id do Usuario</param>        
            <response code="200">Usuario removido com sucesso</response>
            <response code="400">Usuario não encontrado</response>
        </member>
    </members>
</doc>
